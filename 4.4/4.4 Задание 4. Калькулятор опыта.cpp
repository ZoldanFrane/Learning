#include <iostream> 

int main() {

    // Напишите программу, которая определяет уровень персонажа в компьютерной игре.
    // Пользователь вводит число «очков опыта», а программа вычисляет уровень.
    // Новый уровень даётся при достижении 1000, 2500 и 5000 «очков опыта». Начальный уровень равен 1.

    int damage; // Переменная для хранения урона, который введет пользователь
    int total_exp = 0; // Переменная для общего накопленного опыта, начинать с 0
    int level = 1; // Переменная для уровня игрока, изначально 1

    while (true) { // Бесконечный цикл, чтобы можно было вводить урон несколько раз подряд
        std::cout << "Введите нанесённый урон: "; // Вывести на экран просьбу ввести урон
        std::cin >> damage; // Прочитать урон с клавиатуры и записать в переменную damage

        if (damage > 90) { // Если урон больше 90, это подозрительно
            std::cout << "Геракл существует только в легендах - не читери!" << std::endl; // Предупреждение о слишком большом уроне
            continue; // Переходим к следующей попытке ввода (опыт НЕ начисляется)
        }

        int earned_exp = damage * 50; // Вычисляем, сколько опыта заработано за этот урон
        total_exp += earned_exp; // Прибавляем полученный опыт к общей сумме опыта

        // Определяем уровень игрока в зависимости от накопленного опыта
        if (total_exp >= 5000) {
            level = 4; // Если опыта 5000 и больше, уровень 4
        } else if (total_exp >= 2500) {
            level = 3; // Если опыта 2500 и больше, уровень 3
        } else if (total_exp >= 1000) {
            level = 2; // Если опыта 1000 и больше, уровень 2
        } else {
            level = 1; // Если опыта меньше 1000, уровень 1
        }

        std::cout << "За урон начислено опыта: " << earned_exp << std::endl; // Выводим сколько опыта начислено за этот урон
        std::cout << "Общий опыт: " << total_exp << std::endl; // Выводим сколько опыта набрано всего за все попытки
        std::cout << "Текущий уровень: " << level << std::endl << std::endl; // Выводим текущий уровень
    }
}
